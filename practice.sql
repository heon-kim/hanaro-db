# 서브쿼리
-- SELECT *
-- FROM EMP
-- WHERE SAL > (SELECT SAL FROM EMP WHERE ENAME = 'JONES');

-- SELECT *
-- FROM EMP
-- WHERE HIREDATE<(SELECT HIREDATE FROM EMP WHERE ENAME = 'BLAKE');

-- SELECT E.EMPNO, E.ENAME, E.JOB, E.SAL, D.DEPTNO, D.DNAME, D.LOC
-- FROM EMP E
-- INNER JOIN DEPT D
-- ON E.DEPTNO = D.DEPTNO
-- WHERE E.DEPTNO=20 AND E.SAL > (SELECT AVG(SAL) FROM EMP);

-- SELECT *
-- FROM EMP
-- WHERE SAL IN (SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO);

-- SELECT *
-- FROM EMP
-- WHERE SAL = ANY (SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO);

-- SELECT *
-- FROM EMP
-- WHERE SAL = SOME (SELECT MAX(SAL) FROM EMP GROUP BY DEPTNO);

-- SELECT 
-- 	EMPNO, ENAME, JOB, SAL, 
--     (SELECT GRADE FROM SALGRADE WHERE E.SAL BETWEEN LOSAL AND HISAL) AS SALGRADE, 
--     DEPTNO, 
--     (SELECT DNAME FROM DEPT WHERE E.DEPTNO = DEPT.DEPTNO) AS DNAME
-- FROM EMP E;

-- WITH DEPTAVGSALARIES AS (
-- 	SELECT DEPARTMENT_ID, AVG(SALARY) AS AVGSALARY
--     FROM EMPLOYEES
--     GROUP BY DEPARTMENT_ID
-- ),
-- HIGHEARNERS AS (
-- 	SELECT E.FIRST_NAME, E.LAST_NAME, E.SALARY, E.DEPARTMENT_ID
--     FROM EMPLOYEES E
--     JOIN DEPTAVGSALARIES DAS
--     ON E.DEPARTMENT_ID = DAS.DEPARTMENT_ID
--     WHERE E.SALARY > DAS.AVGSALARY
-- )
-- SELECT FIRST_NAME, LAST_NAME, SALARY, DEPARTMENT_ID
-- FROM HIGHEARNERS

-- P152
-- 1번 
-- SELECT * 
-- FROM EMP 
-- WHERE HIREDATE > (SELECT MIN(HIREDATE) 
--                    FROM EMP 
--                    WHERE DEPTNO = 10);

-- 2번
-- SELECT E.JOB, E.EMPNO, E.ENAME, E.SAL, D.DEPTNO, D.DNAME 
-- FROM EMP E
-- JOIN DEPT D ON E.DEPTNO = D.DEPTNO
-- WHERE E.JOB = (SELECT JOB FROM EMP WHERE ENAME = 'ALLEN');

-- 3번
-- SELECT E.EMPNO, E.ENAME, D.DNAME, E.HIREDATE, D.LOC, E.SAL, S.GRADE
-- FROM EMP E
-- JOIN DEPT D ON E.DEPTNO = D.DEPTNO
-- JOIN SALGRADE S ON E.SAL BETWEEN S.LOSAL AND S.HISAL
-- WHERE E.SAL > (SELECT AVG(SAL) FROM EMP)
-- ORDER BY E.SAL DESC, E.EMPNO ASC;

-- SCOTT
-- P153
-- 1번 
-- SELECT 
--     CASE 
--         WHEN COMM IS NOT NULL AND COMM > 0 THEN 'O' 
--         ELSE 'X' 
--     END AS EXIST_COMM,
--     COUNT(*) AS CNT
-- FROM 
--     EMP
-- GROUP BY 
--     EXIST_COMM;

-- 2번
-- SELECT JOB, COUNT(*)
-- FROM EMP
-- GROUP BY JOB
-- HAVING COUNT(*) >= 3;

-- 3번
-- SELECT YEAR(HIREDATE) AS HIRE_YEAR, DEPTNO, COUNT(*) AS CNT
-- FROM EMP 
-- GROUP BY YEAR(HIREDATE), DEPTNO
-- ORDER BY HIRE_YEAR DESC;

-- P156
-- SELECT EMPNO,ENAME,HIREDATE,
--     DATE_FORMAT(
--         DATE_ADD(HIREDATE, INTERVAL 3 MONTH) + INTERVAL (7 - WEEKDAY(DATE_ADD(HIREDATE, INTERVAL 3 MONTH))) % 7 DAY,
--         '%Y-%m-%d'
--     ) AS R_JOB,
--     IFNULL(COMM, 'N/A') AS COMM
-- FROM EMP;

-- P157
-- SELECT 
--     EMPNO,
--     ENAME,
--     MGR,
--     CASE 
--         WHEN MGR IS NULL THEN '0000'
--         WHEN LEFT(MGR, 2) = '75' THEN '5555'
--         WHEN LEFT(MGR, 2) = '76' THEN '6666'
--         WHEN LEFT(MGR, 2) = '77' THEN '7777'
--         WHEN LEFT(MGR, 2) = '78' THEN '8888'
--         ELSE CAST(MGR AS CHAR)
--     END AS CHG_MGR
-- FROM 
--     EMP;

-- P158
-- 1번
-- SELECT 
--     E1.EMPNO,
--     E1.ENAME,
--     E1.JOB,
--     E1.SAL,
--     D.DEPTNO,
--     D.DNAME,
--     D.LOC
-- FROM 
--     EMP E1
-- JOIN 
--     DEPT D ON E1.DEPTNO = D.DEPTNO
-- WHERE 
--     E1.DEPTNO = 10
--     AND E1.JOB NOT IN (SELECT DISTINCT JOB FROM EMP WHERE DEPTNO = 30);

-- P159
-- SELECT  E.EMPNO, E.ENAME, E.JOB, E.SAL, SG.GRADE
-- FROM EMP E
-- JOIN SALGRADE SG ON E.SAL BETWEEN SG.LOSAL AND SG.HISAL
-- WHERE E.SAL > (SELECT MAX(SAL) FROM EMP WHERE JOB = 'SALESMAN');


-- EMP를 EMP_TEMP로 복사
-- CREATE TABLE EMP_TEMP AS
-- SELECT * FROM EMP;

-- EMP를 EMP_TEMP2로 복사
-- CREATE TABLE EMP_TEMP2 AS
-- SELECT * FROM EMP;
 
-- EMP_TEMP에서 급여가 3000 이상인 사원을 삭제하시오
-- DELETE FROM EMP_TEMP
-- WHERE SAL >= 3000;

-- EMP_TEMP2의 모든 데이터를 삭제하시오
-- DELETE FROM EMP_TEMP2; 

-- CREATE TABLE EX_EMP AS SELECT * FROM EMP;
-- CREATE TABLE EX_DEPT AS SELECT * FROM DEPT;
-- CREATE TABLE EX_SALGRADE AS SELECT * FROM SALGRADE;

-- EX_DEPT 테이블에 60~90번 부서 등록하기
-- INSERT INTO EX_DEPT (DEPTNO, DNAME, LOC) VALUES (60, 'ORACLE', 'BUSAN');
-- INSERT INTO EX_DEPT (DEPTNO, DNAME, LOC) VALUES (70, 'HTML', 'INCHOEN');
-- INSERT INTO EX_DEPT (DEPTNO, DNAME, LOC) VALUES (80, 'JAVA', 'ILSAN');
-- INSERT INTO EX_DEPT (DEPTNO, DNAME, LOC) VALUES (90, 'SPRING', 'JEJU');

-- 등록한 부서 확인하기
-- SELECT * 
-- FROM EX_DEPT
-- WHERE DEPTNO BETWEEN 60 AND 90;


-- EX_DEPT에 새로운 데이터 추가하기
-- INSERT INTO EX_EMP (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO) 
-- VALUES 
--     (8001, 'TEST_USER1', 'MANAGER', 7788, '2023-02-10', 4500, 300, 50),
--     (8002, 'TEST_USER2', 'CLERK', 8001, '2022-05-01', 1800, NULL, 50),
--     (8003, 'TEST_USER3', 'ANALYST', 8001, '2021-11-20', 3400, 500, 60),
--     (8004, 'TEST_USER4', 'SALESMAN', 8001, '2023-03-12', 2700, NULL, 60),
--     (8005, 'TEST_USER5', 'CLERK', 8001, '2023-03-12', 2600, NULL, 70),
--     (8006, 'TEST_USER6', 'CLERK', 8001, '2023-03-12', 2600, NULL, 70);

-- 사원 중 60번 부서에서 근무하는 사원들의 평균 급여보다 많은 급여를 받고 있는 사원들을 70번 부서로 옮기기
-- UPDATE EX_EMP
-- SET DEPTNO = 70
-- WHERE SAL > (
-- 	SELECT AVG(SAL)
--     FROM (
-- 		SELECT SAL
--         FROM EX_EMP
--         WHERE DEPTNO = 60) E);
-- SELECT * FROM EX_EMP ORDER BY DEPTNO;

-- 60번 부서에서 근무하는 사원중에 입사일이 가장 빠른 사원보다 늦게 입사한 사원의 급여를 10% 인상하고 80번 부서로 옯기기
-- UPDATE EX_EMP
-- SET SAL = SAL * 1.1, DEPTNO = 80
-- WHERE HIREDATE > (
-- 	SELECT MIN(HIREDATE)
--     FROM (
-- 		SELECT HIREDATE
--         FROM EX_EMP
--         WHERE DEPTNO = 60) E);
-- SELECT * FROM EX_EMP ORDER BY DEPTNO;


-- EX_EMP에 속한 사원 중 급여 등급이 5인 사원을 삭제하기 
-- DELETE FROM EX_EMP
-- WHERE EMPNO IN (
-- 	SELECT EMPNO
--     FROM (
-- 		SELECT EMPNO
--         FROM EX_EMP
-- 		JOIN EX_SALGRADE
-- 		ON SAL BETWEEN LOSAL AND HISAL
-- 		WHERE GRADE = 5) E);
-- SELECT * FROM EX_EMP ORDER BY SAL DESC;

-- EMP_EX2 테이블 생성하기
    -- CREATE TABLE EMP_EX2 (
-- 		EMPNO SMALLINT(4),
--         ENAME VARCHAR(10),
--         JOB VARCHAR(9),
--         MGR SMALLINT(4),
--         HIREDATE DATETIME,
--         SAL DOUBLE,
--         COMM DOUBLE,
--         DEPTNO SMALLINT(2)
-- 	);

-- EMP_EX2에 BIGO열 추가하기
-- ALTER TABLE EMP_EX2
-- ADD BIGO VARCHAR(20);

-- BIGO열 크기를 30으로 변경
-- ALTER TABLE EMP_EX2
-- MODIFY EMPNO VARCHAR(30);

-- BIGO열 이름을 '비고'로 변경
-- ALTER TABLE EMP_EX2
-- RENAME COLUMN BIGO TO 비고;
-- SELECT * FROM EMP_EX2

-- EMP_EX2 테이블에 EMP 테이블 데이터를 모두 저장하기
-- INSERT INTO EMP_EX2 (EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, 비고)
-- SELECT EMPNO, ENAME, JOB, MGR, HIREDATE, SAL, COMM, DEPTNO, NULL
-- FROM EMP;


-- SELECT * FROM EMP_EX2


















